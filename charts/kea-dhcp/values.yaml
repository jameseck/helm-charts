---

replicaCount: 1

image:
  repository: docker.io/jonasal/kea-dhcp4
  pullPolicy: IfNotPresent
  tag: 2.3.3-alpine

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: false
  runAsUser: 0
  # capabilities:
  #   drop:
  #   - ALL

persistence:
  leases:
    storageClass: ""
    existingClaim: ""
    enabled: false
    accessMode: ReadWriteOnce
    size: 100Mi

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

next_server: 0.0.0.0

dhcp4:
  interfaces-config:
    dhcp-socket-type: raw
    interfaces:
    - "*"
  valid-lifetime: 28800
  renew-timer: 1000
  rebind-timer: 2000
  loggers:
  - name: kea-dhcp4
    severity: INFO
    output_options:
    - output: stdout
      pattern: "%D{%Y-%m-%d %H:%M:%S.%q} %-5p [%c/%i.%t] %m\n"
  control-socket:
    socket-type: unix
    socket-name: /kea/sockets/dhcp4.socket
  lease-database:
    type: memfile
    persist: true
    name: /kea/leases/dhcp4.csv
    lfc-interval: 3600
  client-classes:
  - name: Legacy_Intel_x86PC
    test: "option[93].hex == 0x"
#    boot-file-name: undionly.kpxe
    boot-file-name: netboot.xyz.kpxe
  - name: EFI_x86-64
    test: "option[93].hex == 0x0009"
    boot-file-name: snponly.efi
  - name: "HTTPClient"
    test: "option[93].hex == 0x0010"
    option-data: [ { "name": "vendor-class-identifier", "data": "HTTPClient" } ]
    boot-file-name: "http://${httpserver}/ipxe/x86_64/snponly.efi"
  - name: XClient_iPXE
    test: "substring(option[77].hex,0,4) == 'iPXE'"
    boot-file-name: http://${httpserver}/ipxe/boot.php

#  client-classes:
#  - name: Legacy PXE
#    boot-file-name: /ipxe/undionly.kpxe
#    #next-server: 0.0.0.0
#    test: "option[client-system].hex == 0x0000"
#  - name: EFI x86_64
#    boot-file-name: /ipxe/netboot.xyz.efi
#    #next-server: 0.0.0.0
#    test: "option[client-system].hex  == 0x0007"
#  - name: iPXE
#    boot-file-name: ""
#    #next-server: 0.0.0.0
#    test: "substring(option[77].hex,0,4) == 'iPXE'"
#  - name: PXE Host
#    boot-file-name: ""
#    #next-server: 0.0.0.0
#    only-if-required: true
#    option-data: [ ]
#    option-def: [ ]
#    server-hostname: ""
#    test: "member('Legacy PXE') or member('EFI x86_64') or member('iPXE')"
